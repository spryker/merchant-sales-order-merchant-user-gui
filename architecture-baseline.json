[
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `customerReference` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Facade\\MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge::findByReference()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge.php",
        "description": "Bridges: Method `findByReference()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge.php",
        "description": "Bridges: Method `findCustomerAddressByAddressData()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge.php",
        "description": "Bridges: Method `getAddresses()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToCustomerFacadeBridge.php",
        "description": "Bridges: Method `getAllSalutations()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMerchantOmsFacadeBridge.php",
        "description": "Bridges: Method `getMerchantOrderItemsStateHistory()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMerchantSalesOrderFacadeBridge.php",
        "description": "Bridges: Method `findMerchantOrder()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMerchantSalesOrderFacadeBridge.php",
        "description": "Bridges: Method `getMerchantOrdersCount()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMerchantShipmentFacadeBridge.php",
        "description": "Bridges: Method `findShipment()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMerchantUserFacadeBridge.php",
        "description": "Bridges: Method `getCurrentMerchantUser()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMoneyFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `amount` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Facade\\MerchantSalesOrderMerchantUserGuiToMoneyFacadeBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToMoneyFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `isoCode` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Facade\\MerchantSalesOrderMerchantUserGuiToMoneyFacadeBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToShipmentFacadeBridge.php",
        "description": "Bridges: Method `getMethods()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToShipmentFacadeBridge.php",
        "description": "Bridges: Method `createShipmentGroupTransferWithListedItems()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Facade/MerchantSalesOrderMerchantUserGuiToShipmentFacadeBridge.php",
        "description": "Bridges: Method `saveShipment()` must have `public function [update|create]<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Service/MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge.php",
        "description": "Bridges: Type should be defined for param `text` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Service\\MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge::escapeHtml()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Service/MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge.php",
        "description": "Bridges: Type should be defined for param `double` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Service\\MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge::escapeHtml()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/MerchantSalesOrderMerchantUserGui/Dependency/Service/MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge.php",
        "description": "Bridges: Type should be defined for param `charset` in method `Spryker\\Zed\\MerchantSalesOrderMerchantUserGui\\Dependency\\Service\\MerchantSalesOrderMerchantUserGuiToUtilSanitizeBridge::escapeHtml()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
